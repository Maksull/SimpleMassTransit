// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApiDataContext))]
    [Migration("20230527105803_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("251005b9-581c-4fd6-952e-4785977926fb"),
                            Name = "Watersports"
                        },
                        new
                        {
                            CategoryId = new Guid("50bf3be9-4b63-4ecd-8d2d-3a672c5ef3de"),
                            Name = "Football"
                        },
                        new
                        {
                            CategoryId = new Guid("300cd369-ede3-495c-946a-b84267460626"),
                            Name = "Chess"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("d22eac55-7a90-44ae-b842-1cd073254a1a"),
                            CategoryId = new Guid("251005b9-581c-4fd6-952e-4785977926fb"),
                            Name = "Kayak",
                            Price = 275m
                        },
                        new
                        {
                            ProductId = new Guid("dcdaea60-9f88-438b-8088-ef05519a7f5c"),
                            CategoryId = new Guid("251005b9-581c-4fd6-952e-4785977926fb"),
                            Name = "Lifejacket",
                            Price = 48.95m
                        },
                        new
                        {
                            ProductId = new Guid("25d3a624-5e29-4aea-a919-bb978c4ec721"),
                            CategoryId = new Guid("50bf3be9-4b63-4ecd-8d2d-3a672c5ef3de"),
                            Name = "Ball",
                            Price = 19.50m
                        },
                        new
                        {
                            ProductId = new Guid("3ceac13e-91f6-44b1-85c8-8c9db129c9ec"),
                            CategoryId = new Guid("50bf3be9-4b63-4ecd-8d2d-3a672c5ef3de"),
                            Name = "Corner Flags",
                            Price = 34.95m
                        },
                        new
                        {
                            ProductId = new Guid("e6538bb4-edad-429c-a360-fb04559e5baf"),
                            CategoryId = new Guid("50bf3be9-4b63-4ecd-8d2d-3a672c5ef3de"),
                            Name = "Stadium",
                            Price = 79500m
                        },
                        new
                        {
                            ProductId = new Guid("a9803f94-7ef4-4efe-88ea-521e98414094"),
                            CategoryId = new Guid("300cd369-ede3-495c-946a-b84267460626"),
                            Name = "Thinking Cap",
                            Price = 16m
                        },
                        new
                        {
                            ProductId = new Guid("b85a084d-1da8-4dc9-8639-2376ceb5eedf"),
                            CategoryId = new Guid("300cd369-ede3-495c-946a-b84267460626"),
                            Name = "Unsteady Chair",
                            Price = 29.95m
                        },
                        new
                        {
                            ProductId = new Guid("3de347c2-6a33-4864-bc6f-49cba0141060"),
                            CategoryId = new Guid("300cd369-ede3-495c-946a-b84267460626"),
                            Name = "Human Chess Board",
                            Price = 75m
                        },
                        new
                        {
                            ProductId = new Guid("3ad11ab1-4aea-4099-9a2f-ef1b4c6ab387"),
                            CategoryId = new Guid("300cd369-ede3-495c-946a-b84267460626"),
                            Name = "T-shirt",
                            Price = 1200m
                        });
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.HasOne("Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
